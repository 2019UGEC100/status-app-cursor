// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ServiceStatus {
  OPERATIONAL
  DEGRADED
  PARTIAL_OUTAGE
  MAJOR_OUTAGE
  MAINTENANCE
}

enum IncidentStatus {
  OPEN
  MONITORING
  RESOLVED
  SCHEDULED
}

enum IncidentImpact {
  NONE
  MINOR
  MAJOR
  CRITICAL
}

model Organization {
  id        String   @id // Clerk organization ID
  name      String
  slug      String?  @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  services  Service[]
  incidents Incident[]
}

model Service {
  id          String            @id @default(cuid())
  orgId       String
  name        String
  description String?
  status      ServiceStatus     @default(OPERATIONAL)
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt

  organization Organization     @relation(fields: [orgId], references: [id])
  incidents    IncidentService[]
  history      ServiceStatusHistory[]

  @@index([orgId])
}

model Incident {
  id            String            @id @default(cuid())
  orgId         String
  title         String
  description   String?
  status        IncidentStatus    @default(OPEN)
  impact        IncidentImpact    @default(MINOR)
  scheduledFrom DateTime?
  scheduledTo   DateTime?
  resolvedAt    DateTime?
  createdAt     DateTime          @default(now())
  updatedAt     DateTime          @updatedAt

  organization  Organization      @relation(fields: [orgId], references: [id])
  services      IncidentService[]
  updates       IncidentUpdate[]

  @@index([orgId])
}

model IncidentService {
  incidentId String
  serviceId  String

  incident Incident @relation(fields: [incidentId], references: [id])
  service  Service  @relation(fields: [serviceId], references: [id])

  @@id([incidentId, serviceId])
}

model IncidentUpdate {
  id         String   @id @default(cuid())
  incidentId String
  message    String
  createdAt  DateTime @default(now())

  incident Incident @relation(fields: [incidentId], references: [id])

  @@index([incidentId])
}

model ServiceStatusHistory {
  id        String        @id @default(cuid())
  serviceId String
  status    ServiceStatus
  message   String?
  createdAt DateTime      @default(now())

  service Service @relation(fields: [serviceId], references: [id])

  @@index([serviceId])
}
